generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ROLE {
  Admin
  Dispatcher
}

enum STATUS {
  Pending
  Executed
}

model User {
  id         String    @id @default(uuid())
  fName      String? 
  lName      String?
  url        String    @default("https://res.cloudinary.com/dp1o87p4c/image/upload/v1758813658/chatApp/wyy1acz5wbt6m0woeccv.png")
  username   String    @unique
  password   String
  role       ROLE
  districtId String?
  district   District? @relation(fields: [districtId], references: [id], onDelete: SetNull) 
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model District {
  id        String    @id @default(uuid())
  name      String
  latitude  Float 
  longitude Float
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  report    Report[]
  insight   Insight[]
  users     User[]   
}

model Report {
  id              String    @id @default(uuid())
  districtId      String
  timeStamp       DateTime
  congestionLevel String
  incidents       String
  notes           String
  district        District  @relation(fields: [districtId], references: [id], onDelete: Cascade) // ðŸ‘ˆ delete reports if district is deleted
}

model Insight {
  id         String   @id @default(uuid())
  districtId String
  insight    String
  status     STATUS
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  district   District @relation(fields: [districtId], references: [id], onDelete: Cascade) 
}

